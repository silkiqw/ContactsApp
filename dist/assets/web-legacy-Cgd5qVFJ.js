System.register(["./index-legacy-BbVJS0bQ.js"],function(e,t){"use strict";var n,i,a;return{setters:[e=>{n=e.W,i=e.C,a=e.E}],execute:function(){e("ContactsWeb",class extends n{constructor(){super(...arguments),this._isSupported="contacts"in navigator}async countContacts(){throw this.createUnimplementedException()}async createContact(e){throw this.createUnimplementedException()}async createGroup(e){throw this.createUnimplementedException()}async deleteContactById(){throw this.createUnimplementedException()}async deleteGroupById(e){throw this.createUnimplementedException()}async displayContactById(e){throw this.createUnimplementedException()}async displayUpdateContactById(e){throw this.createUnimplementedException()}async getAccounts(){throw this.createUnimplementedException()}async getContactById(e){throw this.createUnimplementedException()}async getGroupById(e){throw this.createUnimplementedException()}async getGroups(){throw this.createUnimplementedException()}async isAvailable(){return{isAvailable:this._isSupported}}async isSupported(){return{isSupported:this._isSupported}}async getContacts(e){throw this.createUnimplementedException()}async pickContact(e){return this.pickContacts(e)}async pickContacts(e){var t;if(!this._isSupported)throw this.createUnavailableException();return{contacts:(await navigator.contacts.select(["address","email","icon","name","tel"],{multiple:null!==(t=null==e?void 0:e.multiple)&&void 0!==t&&t})).map(e=>{var t,n,i,a;return{emailAddresses:null===(t=e.email)||void 0===t?void 0:t.map(e=>({value:e})),phoneNumbers:null===(n=e.tel)||void 0===n?void 0:n.map(e=>({value:e})),postalAddresses:null===(i=e.address)||void 0===i?void 0:i.map(e=>{const t={};return e.city&&(t.city=e.city),e.country&&(t.country=e.country),e.addressLine&&(t.formatted=e.addressLine.join(", ")),e.region&&(t.state=e.region),t}),fullName:null===(a=e.name)||void 0===a?void 0:a.join(" ")}})}}checkPermissions(){throw this.createUnimplementedException()}requestPermissions(){throw this.createUnimplementedException()}displayCreateContact(e){throw this.createUnimplementedException()}async updateContactById(e){throw this.createUnimplementedException()}createUnavailableException(){return new i("Not available on this platform.",a.Unavailable)}createUnimplementedException(){return new i("Not implemented on this platform.",a.Unimplemented)}})}}});
