var capacitorDatetimePicker = (function (exports, core) {
    'use strict';

    /// <reference types="@capacitor/cli" />
    exports.ErrorCode = void 0;
    (function (ErrorCode) {
        /**
         * The picker was canceled by the user.
         *
         * @since 0.2.0
         */
        ErrorCode["canceled"] = "canceled";
        /**
         * The picker was dismissed by the user.
         *
         * @since 0.2.0
         */
        ErrorCode["dismissed"] = "dismissed";
    })(exports.ErrorCode || (exports.ErrorCode = {}));

    const DatetimePicker = core.registerPlugin('DatetimePicker', {
        web: () => Promise.resolve().then(function () { return web; }).then(m => new m.DatetimePickerWeb()),
    });

    class DatetimePickerWeb extends core.WebPlugin {
        async present(_options) {
            throw this.unimplemented('Not implemented on web.');
        }
    }

    var web = /*#__PURE__*/Object.freeze({
        __proto__: null,
        DatetimePickerWeb: DatetimePickerWeb
    });

    exports.DatetimePicker = DatetimePicker;

    return exports;

})({}, capacitorExports);
//# sourceMappingURL=plugin.js.map
