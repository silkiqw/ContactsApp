package io.capawesome.capacitorjs.plugins.contacts.classes.options;

import androidx.annotation.NonNull;
import com.getcapacitor.JSObject;
import com.getcapacitor.PluginCall;
import io.capawesome.capacitorjs.plugins.contacts.ContactsPlugin;
import io.capawesome.capacitorjs.plugins.contacts.classes.Contact;

public class UpdateContactByIdOptions {

    @NonNull
    private final Contact contact;

    @NonNull
    private final Long id;

    public UpdateContactByIdOptions(@NonNull PluginCall call) throws Exception {
        this.contact = getContactFromCall(call);
        this.id = getIdFromCall(call);
    }

    @NonNull
    public Contact getContact() {
        return contact;
    }

    public long getId() {
        return id;
    }

    @NonNull
    private Contact getContactFromCall(@NonNull PluginCall call) throws Exception {
        JSObject contact = call.getObject("contact");
        if (contact == null) {
            throw new Exception(ContactsPlugin.ERROR_CONTACT_MISSING);
        }
        return new Contact(contact);
    }

    private long getIdFromCall(@NonNull PluginCall call) throws Exception {
        String id = call.getString("id");
        if (id == null) {
            throw new Exception(ContactsPlugin.ERROR_ID_MISSING);
        }
        return Long.parseLong(id);
    }
}
