package io.capawesome.capacitorjs.plugins.contacts.enums;

import android.provider.ContactsContract;
import androidx.annotation.Nullable;

public enum ContactField {
    ACCOUNT,
    BIRTHDAY,
    EMAIL_ADDRESSES,
    FAMILY_NAME,
    GIVEN_NAME,
    ID,
    JOB_TITLE,
    MIDDLE_NAME,
    NAME_PREFIX,
    NAME_SUFFIX,
    ORGANIZATION_NAME,
    PHONE_NUMBERS,
    POSTAL_ADDRESSES,
    URL_ADDRESSES,
    PHOTO,
    NOTE;

    @Nullable
    public String[] getProjectionColumns() {
        return switch (this) {
            case ACCOUNT -> new String[] { ContactsContract.RawContacts.ACCOUNT_NAME, ContactsContract.RawContacts.ACCOUNT_TYPE };
            case BIRTHDAY -> new String[] { ContactsContract.CommonDataKinds.Event.START_DATE };
            case EMAIL_ADDRESSES -> new String[] {
                ContactsContract.CommonDataKinds.Email.ADDRESS,
                ContactsContract.CommonDataKinds.Email.IS_PRIMARY,
                ContactsContract.CommonDataKinds.Email.LABEL,
                ContactsContract.CommonDataKinds.Email.TYPE
            };
            case FAMILY_NAME -> new String[] { ContactsContract.CommonDataKinds.StructuredName.FAMILY_NAME };
            case GIVEN_NAME -> new String[] { ContactsContract.CommonDataKinds.StructuredName.GIVEN_NAME };
            case ID -> new String[] { ContactsContract.Data.CONTACT_ID };
            case JOB_TITLE -> new String[] { ContactsContract.CommonDataKinds.Organization.TITLE };
            case MIDDLE_NAME -> new String[] { ContactsContract.CommonDataKinds.StructuredName.MIDDLE_NAME };
            case NAME_PREFIX -> new String[] { ContactsContract.CommonDataKinds.StructuredName.PREFIX };
            case NAME_SUFFIX -> new String[] { ContactsContract.CommonDataKinds.StructuredName.SUFFIX };
            case ORGANIZATION_NAME -> new String[] { ContactsContract.CommonDataKinds.Organization.COMPANY };
            case PHONE_NUMBERS -> new String[] {
                ContactsContract.CommonDataKinds.Phone.NUMBER,
                ContactsContract.CommonDataKinds.Phone.IS_PRIMARY,
                ContactsContract.CommonDataKinds.Phone.LABEL,
                ContactsContract.CommonDataKinds.Phone.TYPE
            };
            case POSTAL_ADDRESSES -> new String[] {
                ContactsContract.CommonDataKinds.StructuredPostal.TYPE,
                ContactsContract.CommonDataKinds.StructuredPostal.CITY,
                ContactsContract.CommonDataKinds.StructuredPostal.COUNTRY,
                ContactsContract.CommonDataKinds.StructuredPostal.FORMATTED_ADDRESS,
                ContactsContract.CommonDataKinds.StructuredPostal.IS_PRIMARY,
                ContactsContract.CommonDataKinds.StructuredPostal.LABEL,
                ContactsContract.CommonDataKinds.StructuredPostal.NEIGHBORHOOD,
                ContactsContract.CommonDataKinds.StructuredPostal.POSTCODE,
                ContactsContract.CommonDataKinds.StructuredPostal.REGION,
                ContactsContract.CommonDataKinds.StructuredPostal.STREET
            };
            case URL_ADDRESSES -> new String[] { ContactsContract.CommonDataKinds.Website.URL };
            case PHOTO -> new String[] { ContactsContract.CommonDataKinds.Photo.PHOTO };
            case NOTE -> new String[] { ContactsContract.CommonDataKinds.Note.NOTE };
            default -> null;
        };
    }

    @Nullable
    public String getMimeType() {
        return switch (this) {
            case BIRTHDAY -> ContactsContract.CommonDataKinds.Event.CONTENT_ITEM_TYPE;
            case EMAIL_ADDRESSES -> ContactsContract.CommonDataKinds.Email.CONTENT_ITEM_TYPE;
            case ID,
                FAMILY_NAME,
                GIVEN_NAME,
                MIDDLE_NAME,
                NAME_PREFIX,
                NAME_SUFFIX -> ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE;
            case JOB_TITLE, ORGANIZATION_NAME -> ContactsContract.CommonDataKinds.Organization.CONTENT_ITEM_TYPE;
            case PHONE_NUMBERS -> ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE;
            case POSTAL_ADDRESSES -> ContactsContract.CommonDataKinds.StructuredPostal.CONTENT_ITEM_TYPE;
            case URL_ADDRESSES -> ContactsContract.CommonDataKinds.Website.CONTENT_ITEM_TYPE;
            case PHOTO -> ContactsContract.CommonDataKinds.Photo.CONTENT_ITEM_TYPE;
            case NOTE -> ContactsContract.CommonDataKinds.Note.CONTENT_ITEM_TYPE;
            default -> null;
        };
    }

    @Nullable
    public static ContactField fromString(String key) {
        return switch (key) {
            case "account" -> ACCOUNT;
            case "birthday" -> BIRTHDAY;
            case "emailAddresses" -> EMAIL_ADDRESSES;
            case "familyName" -> FAMILY_NAME;
            case "givenName" -> GIVEN_NAME;
            case "id" -> ID;
            case "jobTitle" -> JOB_TITLE;
            case "middleName" -> MIDDLE_NAME;
            case "namePrefix" -> NAME_PREFIX;
            case "nameSuffix" -> NAME_SUFFIX;
            case "organizationName" -> ORGANIZATION_NAME;
            case "phoneNumbers" -> PHONE_NUMBERS;
            case "postalAddresses" -> POSTAL_ADDRESSES;
            case "urlAddresses" -> URL_ADDRESSES;
            case "photo" -> PHOTO;
            case "note" -> NOTE;
            default -> null;
        };
    }
}
