package io.capawesome.capacitorjs.plugins.contacts.classes;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.getcapacitor.JSObject;
import io.capawesome.capacitorjs.plugins.contacts.ContactsPlugin;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class Birthday {

    @Nullable
    String value;

    public Birthday(@Nullable String data) {
        this.value = data;
    }

    public Birthday(@NonNull JSObject data) throws Exception {
        this.value = getBirthdayFromJSObject(data);
    }

    @Nullable
    public String getValue() {
        return value;
    }

    @Nullable
    public JSObject toJSObject() {
        if (value == null) {
            return null;
        }

        JSObject birthdayResult = new JSObject();
        String[] rawParts = value.split("-");
        List<String> listParts = new ArrayList<>();
        for (String s : rawParts) {
            if (!s.isEmpty()) {
                listParts.add(s);
            }
        }
        String[] parts = listParts.toArray(new String[0]);

        try {
            if (parts.length == 3) {
                int year = Integer.parseInt(parts[0]);
                int month = Integer.parseInt(parts[1]);
                int day = Integer.parseInt(parts[2]);
                birthdayResult.put("day", day);
                birthdayResult.put("month", month);
                birthdayResult.put("year", year);
            } else if (parts.length == 2) {
                int month = Integer.parseInt(parts[0]);
                int day = Integer.parseInt(parts[1]);
                birthdayResult.put("day", day);
                birthdayResult.put("month", month);
            } else {
                return null;
            }
            return birthdayResult;
        } catch (Exception e) {
            return null;
        }
    }

    @Nullable
    private String getBirthdayFromJSObject(@NonNull JSObject data) throws Exception {
        JSObject birthday = data.getJSObject("birthday");
        if (birthday == null) {
            return null;
        }

        String birthdayFormat = "MM-dd";

        Integer day = birthday.has("day") && !birthday.isNull("day") ? birthday.getInteger("day") : null;
        if (day == null) {
            throw new Exception(ContactsPlugin.ERROR_BIRTHDAY_DAY_MISSING);
        }
        Integer month = birthday.has("month") && !birthday.isNull("month") ? birthday.getInteger("month") : null;
        if (month == null) {
            throw new Exception(ContactsPlugin.ERROR_BIRTHDAY_MONTH_MISSING);
        }
        Integer year = birthday.has("year") && !birthday.isNull("year") ? birthday.getInteger("year") : null;

        String birthdayString = String.format(Locale.ROOT, "%02d-%02d", month, day);

        if (year != null) {
            birthdayFormat = "yyyy-MM-dd";
            birthdayString = String.format(Locale.ROOT, "%04d-%s", year, birthdayString);
        }

        SimpleDateFormat dateFormat = new SimpleDateFormat(birthdayFormat, Locale.getDefault());
        dateFormat.setLenient(false);
        Date date = dateFormat.parse(birthdayString);

        if (date == null) {
            return null;
        } else {
            if (year != null) {
                return birthdayString;
            } else {
                return String.format(Locale.ROOT, "--%s", birthdayString);
            }
        }
    }
}
