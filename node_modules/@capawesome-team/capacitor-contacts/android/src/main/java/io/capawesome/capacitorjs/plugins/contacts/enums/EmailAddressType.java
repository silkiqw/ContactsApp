package io.capawesome.capacitorjs.plugins.contacts.enums;

import android.provider.ContactsContract;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

public enum EmailAddressType {
    CUSTOM("CUSTOM"),
    HOME("HOME"),
    MOBILE("MOBILE"),
    OTHER("OTHER"),
    WORK("WORK");

    private final String value;

    private EmailAddressType(String value) {
        this.value = value;
    }

    @Nullable
    public static EmailAddressType fromInt(@Nullable Integer value) {
        if (value == null) {
            return null;
        }
        return switch (value) {
            case ContactsContract.CommonDataKinds.Email.TYPE_CUSTOM -> CUSTOM;
            case ContactsContract.CommonDataKinds.Email.TYPE_HOME -> HOME;
            case ContactsContract.CommonDataKinds.Email.TYPE_WORK -> WORK;
            case ContactsContract.CommonDataKinds.Email.TYPE_OTHER -> OTHER;
            case ContactsContract.CommonDataKinds.Email.TYPE_MOBILE -> MOBILE;
            default -> null;
        };
    }

    @Nullable
    public static EmailAddressType fromString(String value) {
        for (EmailAddressType type : EmailAddressType.values()) {
            if (type.value.equals(value)) {
                return type;
            }
        }
        return null;
    }

    public int toInt() {
        return switch (this.value) {
            case "CUSTOM" -> ContactsContract.CommonDataKinds.Email.TYPE_CUSTOM;
            case "HOME" -> ContactsContract.CommonDataKinds.Email.TYPE_HOME;
            case "WORK" -> ContactsContract.CommonDataKinds.Email.TYPE_WORK;
            case "MOBILE" -> ContactsContract.CommonDataKinds.Email.TYPE_MOBILE;
            default -> ContactsContract.CommonDataKinds.Email.TYPE_OTHER;
        };
    }

    @NonNull
    public String toString() {
        return value;
    }
}
