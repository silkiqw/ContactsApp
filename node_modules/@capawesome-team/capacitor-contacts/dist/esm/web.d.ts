import { WebPlugin } from '@capacitor/core';
import type { ContactsPlugin, CreateContactOptions, CreateContactResult, GetContactByIdOptions, GetContactByIdResult, GetContactsResult, IsSupportedResult, PermissionStatus, PickContactOptions, PickContactResult, GetContactsOptions, DisplayCreateContactOptions, CreateGroupOptions, CreateGroupResult, DeleteGroupByIdOptions, GetGroupByIdOptions, GetGroupByIdResult, GetGroupsResult, GetAccountsResult, PickContactsOptions, PickContactsResult, CountContactsResult, DisplayCreateContactResult, DisplayContactByIdOptions, UpdateContactByIdOptions, DisplayUpdateContactByIdOptions, IsAvailableResult } from './definitions';
export declare class ContactsWeb extends WebPlugin implements ContactsPlugin {
    private readonly _isSupported;
    countContacts(): Promise<CountContactsResult>;
    createContact(_options: CreateContactOptions): Promise<CreateContactResult>;
    createGroup(_options: CreateGroupOptions): Promise<CreateGroupResult>;
    deleteContactById(): Promise<void>;
    deleteGroupById(_options: DeleteGroupByIdOptions): Promise<void>;
    displayContactById(_options: DisplayContactByIdOptions): Promise<void>;
    displayUpdateContactById(_options: DisplayUpdateContactByIdOptions): Promise<void>;
    getAccounts(): Promise<GetAccountsResult>;
    getContactById(_options: GetContactByIdOptions): Promise<GetContactByIdResult>;
    getGroupById(_options: GetGroupByIdOptions): Promise<GetGroupByIdResult>;
    getGroups(): Promise<GetGroupsResult>;
    isAvailable(): Promise<IsAvailableResult>;
    isSupported(): Promise<IsSupportedResult>;
    getContacts(_options: GetContactsOptions): Promise<GetContactsResult>;
    pickContact(options?: PickContactOptions): Promise<PickContactResult>;
    pickContacts(options?: PickContactsOptions): Promise<PickContactsResult>;
    checkPermissions(): Promise<PermissionStatus>;
    requestPermissions(): Promise<PermissionStatus>;
    displayCreateContact(_options?: DisplayCreateContactOptions): Promise<DisplayCreateContactResult>;
    updateContactById(_options: UpdateContactByIdOptions): Promise<void>;
    private createUnavailableException;
    private createUnimplementedException;
}
