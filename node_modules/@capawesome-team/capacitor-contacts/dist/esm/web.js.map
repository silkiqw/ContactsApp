{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAiC/E,MAAM,OAAO,WAAY,SAAQ,SAAS;IAA1C;;QACmB,iBAAY,GAAG,UAAU,IAAI,SAAS,CAAC;IAwK1D,CAAC;IAtKQ,KAAK,CAAC,aAAa;QACxB,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,aAAa,CACxB,QAA8B;QAE9B,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,WAAW,CACtB,QAA4B;QAE5B,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,iBAAiB;QAC5B,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,eAAe,CAC1B,QAAgC;QAEhC,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,kBAAkB,CAC7B,QAAmC;QAEnC,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,wBAAwB,CACnC,QAAyC;QAEzC,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,cAAc,CACzB,QAA+B;QAE/B,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,YAAY,CACvB,QAA6B;QAE7B,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IACM,KAAK,CAAC,SAAS;QACpB,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,WAAW,CACtB,QAA4B;QAE5B,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,WAAW,CACtB,OAA4B;QAE5B,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAEM,KAAK,CAAC,YAAY,CACvB,OAA6B;;QAE7B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACzC;QACD,MAAM,QAAQ,GAAG,CAAC,MAAO,SAAiB,CAAC,QAAQ,CAAC,MAAM,CACxD,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,EAC3C,EAAE,QAAQ,QAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,mCAAI,KAAK,EAAE,CACzC,CAiBE,CAAC;QACJ,OAAO;YACL,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;;gBAAC,OAAA,CAAC;oBACjC,cAAc,QAAE,OAAO,CAAC,KAAK,0CAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBAC3C,KAAK,EAAE,KAAK;qBACb,CAAC,CAAC;oBACH,YAAY,QAAE,OAAO,CAAC,GAAG,0CAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;wBACrC,KAAK,EAAE,GAAG;qBACX,CAAC,CAAC;oBACH,eAAe,QAAE,OAAO,CAAC,OAAO,0CAAE,GAAG,CAAC,OAAO,CAAC,EAAE;wBAC9C,MAAM,aAAa,GAAkB,EAAE,CAAC;wBACxC,IAAI,OAAO,CAAC,IAAI,EAAE;4BAChB,aAAa,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;yBACnC;wBACD,IAAI,OAAO,CAAC,OAAO,EAAE;4BACnB,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;yBACzC;wBACD,IAAI,OAAO,CAAC,WAAW,EAAE;4BACvB,aAAa,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC1D;wBACD,IAAI,OAAO,CAAC,MAAM,EAAE;4BAClB,aAAa,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;yBACtC;wBACD,OAAO,aAAa,CAAC;oBACvB,CAAC,CAAC;oBACF,QAAQ,QAAE,OAAO,CAAC,IAAI,0CAAE,IAAI,CAAC,GAAG,CAAC;iBAClC,CAAC,CAAA;aAAA,CAAC;SACJ,CAAC;IACJ,CAAC;IAEM,gBAAgB;QACrB,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,kBAAkB;QACvB,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,oBAAoB,CACzB,QAAsC;QAEtC,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAC5B,QAAkC;QAElC,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;IAC5C,CAAC;IAEO,0BAA0B;QAChC,OAAO,IAAI,kBAAkB,CAC3B,iCAAiC,EACjC,aAAa,CAAC,WAAW,CAC1B,CAAC;IACJ,CAAC;IAEO,4BAA4B;QAClC,OAAO,IAAI,kBAAkB,CAC3B,mCAAmC,EACnC,aAAa,CAAC,aAAa,CAC5B,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { CapacitorException, ExceptionCode, WebPlugin } from '@capacitor/core';\n\nimport type {\n  ContactsPlugin,\n  CreateContactOptions,\n  CreateContactResult,\n  GetContactByIdOptions,\n  GetContactByIdResult,\n  GetContactsResult,\n  IsSupportedResult,\n  PermissionStatus,\n  PickContactOptions,\n  PickContactResult,\n  PostalAddress,\n  GetContactsOptions,\n  DisplayCreateContactOptions,\n  CreateGroupOptions,\n  CreateGroupResult,\n  DeleteGroupByIdOptions,\n  GetGroupByIdOptions,\n  GetGroupByIdResult,\n  GetGroupsResult,\n  GetAccountsResult,\n  PickContactsOptions,\n  PickContactsResult,\n  CountContactsResult,\n  DisplayCreateContactResult,\n  DisplayContactByIdOptions,\n  UpdateContactByIdOptions,\n  DisplayUpdateContactByIdOptions,\n  IsAvailableResult,\n} from './definitions';\n\nexport class ContactsWeb extends WebPlugin implements ContactsPlugin {\n  private readonly _isSupported = 'contacts' in navigator;\n\n  public async countContacts(): Promise<CountContactsResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async createContact(\n    _options: CreateContactOptions,\n  ): Promise<CreateContactResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async createGroup(\n    _options: CreateGroupOptions,\n  ): Promise<CreateGroupResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async deleteContactById(): Promise<void> {\n    throw this.createUnimplementedException();\n  }\n\n  public async deleteGroupById(\n    _options: DeleteGroupByIdOptions,\n  ): Promise<void> {\n    throw this.createUnimplementedException();\n  }\n\n  public async displayContactById(\n    _options: DisplayContactByIdOptions,\n  ): Promise<void> {\n    throw this.createUnimplementedException();\n  }\n\n  public async displayUpdateContactById(\n    _options: DisplayUpdateContactByIdOptions,\n  ): Promise<void> {\n    throw this.createUnimplementedException();\n  }\n\n  public async getAccounts(): Promise<GetAccountsResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async getContactById(\n    _options: GetContactByIdOptions,\n  ): Promise<GetContactByIdResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async getGroupById(\n    _options: GetGroupByIdOptions,\n  ): Promise<GetGroupByIdResult> {\n    throw this.createUnimplementedException();\n  }\n  public async getGroups(): Promise<GetGroupsResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async isAvailable(): Promise<IsAvailableResult> {\n    return { isAvailable: this._isSupported };\n  }\n\n  public async isSupported(): Promise<IsSupportedResult> {\n    return { isSupported: this._isSupported };\n  }\n\n  public async getContacts(\n    _options: GetContactsOptions,\n  ): Promise<GetContactsResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async pickContact(\n    options?: PickContactOptions,\n  ): Promise<PickContactResult> {\n    return this.pickContacts(options);\n  }\n\n  public async pickContacts(\n    options?: PickContactsOptions,\n  ): Promise<PickContactsResult> {\n    if (!this._isSupported) {\n      throw this.createUnavailableException();\n    }\n    const contacts = (await (navigator as any).contacts.select(\n      ['address', 'email', 'icon', 'name', 'tel'],\n      { multiple: options?.multiple ?? false },\n    )) as {\n      address?: {\n        addressLine: string[];\n        city: string;\n        country: string;\n        dependentLocality: string;\n        organization: string;\n        phone: string;\n        postalCode: string;\n        recipient: string;\n        region: string;\n        sortingCode: string;\n      }[];\n      email?: string[];\n      icon?: Blob[];\n      name?: string[];\n      tel?: string[];\n    }[];\n    return {\n      contacts: contacts.map(contact => ({\n        emailAddresses: contact.email?.map(email => ({\n          value: email,\n        })),\n        phoneNumbers: contact.tel?.map(tel => ({\n          value: tel,\n        })),\n        postalAddresses: contact.address?.map(address => {\n          const postalAddress: PostalAddress = {};\n          if (address.city) {\n            postalAddress.city = address.city;\n          }\n          if (address.country) {\n            postalAddress.country = address.country;\n          }\n          if (address.addressLine) {\n            postalAddress.formatted = address.addressLine.join(', ');\n          }\n          if (address.region) {\n            postalAddress.state = address.region;\n          }\n          return postalAddress;\n        }),\n        fullName: contact.name?.join(' '),\n      })),\n    };\n  }\n\n  public checkPermissions(): Promise<PermissionStatus> {\n    throw this.createUnimplementedException();\n  }\n\n  public requestPermissions(): Promise<PermissionStatus> {\n    throw this.createUnimplementedException();\n  }\n\n  public displayCreateContact(\n    _options?: DisplayCreateContactOptions,\n  ): Promise<DisplayCreateContactResult> {\n    throw this.createUnimplementedException();\n  }\n\n  public async updateContactById(\n    _options: UpdateContactByIdOptions,\n  ): Promise<void> {\n    throw this.createUnimplementedException();\n  }\n\n  private createUnavailableException(): CapacitorException {\n    return new CapacitorException(\n      'Not available on this platform.',\n      ExceptionCode.Unavailable,\n    );\n  }\n\n  private createUnimplementedException(): CapacitorException {\n    return new CapacitorException(\n      'Not implemented on this platform.',\n      ExceptionCode.Unimplemented,\n    );\n  }\n}\n"]}