import Foundation
import Contacts

enum PhoneNumberType: String {
    case custom = "CUSTOM"
    case faxHome = "FAX_HOME"
    case faxOther = "FAX_OTHER"
    case faxWork = "FAX_WORK"
    case home = "HOME"
    case iPhone = "IPHONE"
    case main = "MAIN"
    case mobile = "MOBILE"
    case other = "OTHER"
    case pager = "PAGER"
    case work = "WORK"

    static func fromLabel(_ label: String?) -> PhoneNumberType? {
        guard let label = label else {
            return nil
        }
        switch label {
        case CNLabelPhoneNumberHomeFax:
            return .faxHome
        case CNLabelPhoneNumberOtherFax:
            return .faxOther
        case CNLabelPhoneNumberWorkFax:
            return .faxWork
        case CNLabelHome:
            return .home
        case CNLabelPhoneNumberiPhone:
            return .iPhone
        case CNLabelPhoneNumberMain:
            return .main
        case CNLabelPhoneNumberMobile:
            return .mobile
        case CNLabelOther:
            return .other
        case CNLabelPhoneNumberPager:
            return .pager
        case CNLabelWork:
            return .work
        default:
            return .custom
        }
    }

    func toLabel() -> String? {
        switch self {
        case .faxHome:
            return CNLabelPhoneNumberHomeFax
        case .faxOther:
            return CNLabelPhoneNumberOtherFax
        case .faxWork:
            return CNLabelPhoneNumberWorkFax
        case .home:
            return CNLabelHome
        case .iPhone:
            return CNLabelPhoneNumberiPhone
        case .main:
            return CNLabelPhoneNumberMain
        case .mobile:
            return CNLabelPhoneNumberMobile
        case .other:
            return CNLabelOther
        case .pager:
            return CNLabelPhoneNumberPager
        case .work:
            return CNLabelWork
        default:
            return nil
        }
    }
}
